# This Makefile is used on the docker host, outside containers
-include /etc/os-release
include Makefile.version

# Variables needed for distribution building
ifeq ($(ID), none)
ID=	$(shell lsb_release -si)
endif

ifeq ($(ID), "almalinux")
ID="rhel"
endif

RELEASEVER=	$(shell echo $(VERSION_ID) | cut -d . -f 1)
ARCH=		$(shell uname -m)

REPOHOST=	trx-control.msys.ch
REPOBASE=	/var/www/trx-control/pub/repos
PKGDEST=	/tmp/trx-control

YUMDEST=	$(PKGDEST)/yum
APTDEST=	$(PKGDEST)/apt
ZYPPDEST=	$(PKGDEST)/zypp

REPOUSER=	root
REPOPATH=	$(REPOBASE)/rhel-$(RELEASEVER)-$(ARCH)

REDHAT_BASED=	alma-9 \
		alma-8 \
		rocky-9 \
		rocky-8 \
		fedora-39 \
		fedora-38

SUSE_BASED=	opensuse-leap-15.5 \
		opensuse-tumbleweed

DEBIAN_BASED=	ubuntu-23.10 \
		ubuntu-23.04 \
		ubuntu-22.04 \
		ubuntu-20.04 \
		debian-12.4 \
		debian-12.2

all:	$(REDHAT_BASED) $(SUSE_BASED) $(DEBIAN_BASED)

clean:
	rm -rf $(PKGDEST)

# Special targets to build rpms and install them.  Should eventually be
# be replaced by a CI/CD pipeline.

UID=	$(shell id -u)
SOCK=	/tmp/.trx-control.$(UID)

repos:	connect redhat-repo suse-repo debian-repo pubkey disconnect

connect:
	ssh -S $(SOCK) -M -N -o ControlMaster=yes -f root@trx-control.msys.ch

pubkey:
	gpg --export -a info@hb9ssb.ch | \
		ssh -S $(SOCK) trx-control.msys.ch cat \> \
		$(REPOBASE)/trx-control.asc

disconnect:
	ssh -S $(SOCK) -O exit trx-control.msys.ch

redhat-repo:
	ssh -S $(SOCK) trx-control.msys.ch mkdir -p $(REPOBASE)/yum
	rsync -avz -e "ssh -o ControlPath=$(SOCK)" \
		$(YUMDEST) root@trx-control.msys.ch:$(REPOBASE)
	for f in $(REDHAT_BASED); \
		do ssh -S $(SOCK) trx-control.msys.ch \
				createrepo $(REPOBASE)/yum/$$f; done

suse-repo:
	ssh -S $(SOCK) trx-control.msys.ch mkdir -p $(REPOBASE)/zypp
	rsync -avz -e "ssh -o ControlPath=$(SOCK)" \
		$(ZYPPDEST) root@trx-control.msys.ch:$(REPOBASE)
	for f in $(SUSE_BASED); \
		do ssh -S $(SOCK) trx-control.msys.ch \
				createrepo $(REPOBASE)/zypp/$$f; done

debian-repo:
	ssh -S $(SOCK) trx-control.msys.ch mkdir -p $(REPOBASE)/apt
	rsync -avz -e "ssh -o ControlPath=$(SOCK)" \
		$(APTDEST) root@trx-control.msys.ch:$(REPOBASE)

$(REDHAT_BASED):
	-mkdir -p $(YUMDEST)/$@
	docker run --rm \
		-e REPO=$@ \
		-v `pwd`:/dist \
		-v $(YUMDEST)/$@:/yum \
		-v ~/.gnupg/pubring.gpg:/root/.gnupg/pubring.gpg \
		-v ~/.gnupg/private-keys-v1.d:/root/.gnupg/private-keys-v1.d \
		--name $@ \
		pkg-builder/$@ \
		/usr/bin/make -C /dist -f Makefile.docker redhat-packages

$(SUSE_BASED):
	-mkdir -p $(ZYPPDEST)/$@
	docker run --rm \
		-e REPO=$@ \
		-v `pwd`:/dist \
		-v $(ZYPPDEST)/$@:/zypp \
		-v ~/.gnupg/pubring.gpg:/root/.gnupg/pubring.gpg \
		-v ~/.gnupg/private-keys-v1.d:/root/.gnupg/private-keys-v1.d \
		--name $@ \
		pkg-builder/$@ \
		/usr/bin/make -C /dist -f Makefile.docker suse-packages

$(DEBIAN_BASED):
	-mkdir $(APTDEST)
	docker run -it --rm \
		-e REPO=$@ \
		-v `pwd`:/dist \
		-v $(APTDEST):/apt \
		-v ~/.gnupg/pubring.gpg:/root/.gnupg/pubring.gpg \
		-v ~/.gnupg/private-keys-v1.d:/root/.gnupg/private-keys-v1.d \
		--name $@ \
		pkg-builder/$@ \
		/usr/bin/make -C /dist -f Makefile.docker debian-packages

